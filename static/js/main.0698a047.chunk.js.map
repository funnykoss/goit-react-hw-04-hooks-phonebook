{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactList/Contact.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactsList.module.css"],"names":["module","exports","ContactForm","state","name","number","handlerChange","event","target","value","setState","submitForm","preventDefault","newContact","id","shortid","generate","props","addContact","reset","className","s","title","form","onSubmit","this","label","input","type","pattern","required","onChange","button","Component","ContactList","contacts","onDeleteContact","map","contact","item","onClick","prototype","PropTypes","object","isRequired","func","Filter","htmlFor","string","Contact","App","filter","undefined","find","prevState","alert","currentTarget","deleteContact","prevContact","localStorage","getItem","parseContacts","JSON","parse","prevProps","console","log","setItem","stringify","normalizeContacts","toLowerCase","filteredContacts","includes","section","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0698a047.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1OL6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"title\":\"ContactForm_title__3MqSl\"};","import { Component } from \"react\";\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css'\nimport PropTypes from 'prop-types';\nexport default class ContactForm extends Component{\n    state = {\n         name: '',\n        number: '',\n    }\n\n    handlerChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value});\n    };\n\n    submitForm = event => {\n        event.preventDefault();\n        const newContact = {\n            id: shortid.generate(),\n            name: this.state.name,\n            number: this.state.number,\n      }\n      \n      this.props.addContact(newContact);\n      this.reset()\n    \n    }\n    reset = () => {\n        this.setState({ name: '', number: '',})\n    }\n    render(){\n        return (\n       <>\n        <h2 className={s.title}>Phonebook</h2>\n          <form className={s.form}\n              onSubmit={this.submitForm}>\n              <label className={s.label}>\n            Name\n            <input className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handlerChange}\n            />\n          </label>\n              <label className={s.label}>\n            Number\n            <input className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handlerChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}> Add contacts</button>\n          </form>\n      </>\n    )\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired\n}","import React from 'react';\nimport s from '../ContactList/ContactsList.module.css'\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact  }) => {\n  return (\n    <ul>\n      {\n        contacts.map(contact =>(\n          <li className={s.item} key={contact.id}>\n            {contact.name} : {contact.number}\n            <button className={s.button}\n              type='button'\n              onClick={() => onDeleteContact(contact.id)} >\n           \n            Delete\n            </button>\n          </li>\n        ))\n      }\n   </ul>\n  )\n}\n\nexport default ContactList\n\n\nContactList.prototype = {\n  contacts: PropTypes.object.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n}","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../Filter/Filter.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <label className={s.label}\n            htmlFor={shortid.generate()}>\n            Find contact by name\n            <input className={s.input}\n                name=\"filter\"\n                type='text'\n                value={value}\n                onChange={onChange}/>\n        </label>\n    )\n}\n\nFilter.prototype = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import React from 'react';\nimport s from '../ContactList/ContactsList.module.css'\nconst Contact = () => {\n    return (\n     <section>\n        <h2 className={s.title}>Contacts</h2>\n     </section>\n     )\n}\nexport default  Contact","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport Contact from './components/ContactList/Contact.jsx';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const prevContact = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(prevContact);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.contacts);\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = newContact => {\n    const contactCheck = this.state.contacts.find(\n      ({ name }) => name === newContact.name,\n    );\n\n    if (contactCheck !== undefined) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n  onChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ filter: '' });\n  };\n  render() {\n    const { filter, contacts } = this.state;\n    const normalizeContacts = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeContacts),\n    );\n\n    return (\n      <>\n        <section className={s.section}>\n          <ContactForm addContact={this.addContact} />\n          <Contact />\n          <Filter value={this.state.filter} onChange={this.onChange} />\n          <ContactList\n            // contacts={this.state.contacts}\n\n            onDeleteContact={this.deleteContact}\n            contacts={filteredContacts}\n          />\n        </section>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__2Rff5\",\"item\":\"ContactsList_item__1xwZQ\",\"title\":\"ContactsList_title__2Mqin\"};"],"sourceRoot":""}