{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactList/Contact.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactsList.module.css"],"names":["module","exports","ContactForm","addContact","useState","name","setName","number","setNumber","handlerChange","event","target","value","className","s","title","form","onSubmit","console","log","preventDefault","label","input","type","pattern","required","onChange","button","ContactList","contacts","onDeleteContact","map","contact","item","onClick","id","prototype","PropTypes","object","isRequired","func","Filter","htmlFor","shortid","generate","string","Contact","App","filter","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","normalizeContacts","toLowerCase","filteredContacts","includes","section","newContact","undefined","find","prevState","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7a06faf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1OL6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"title\":\"ContactForm_title__3MqSl\"};","import { useState } from \"react\";\n\nimport s from '../ContactForm/ContactForm.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handlerChange = event => {\n  \n    const { name, value } = event.target;\n     \n    switch (name) {\n      case 'name':\n        setName(value)\n        break;\n      \n      case 'number':\n        setNumber(value)\n        break;\n      \n      default:\n        break;\n    }\n    \n    };\n\n  const submitForm = event => {\n console.log(event)\n    event.preventDefault();\n     \n    addContact(name,number);\n    reset();\n   }\n   function reset() {\n      setName('');\n      setNumber('');\n     }\n  \n  return (\n       <>\n        <h2 className={s.title}>Phonebook</h2>\n          <form className={s.form}\n              onSubmit={submitForm}>\n              <label className={s.label}>\n            Name\n            <input className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={handlerChange}\n            />\n          </label>\n              <label className={s.label}>\n            Number\n            <input className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={handlerChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}> Add contacts</button>\n          </form>\n      </>)\n \n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired\n}","import React from 'react';\nimport s from '../ContactList/ContactsList.module.css'\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact  }) => {\n  return (\n    <ul>\n      {\n        contacts.map(contact =>(\n          <li className={s.item} key={contact.id}>\n            {contact.name} : {contact.number}\n            <button className={s.button}\n              type='button'\n              onClick={() => onDeleteContact(contact.id)} >\n           \n            Delete\n            </button>\n          </li>\n        ))\n      }\n   </ul>\n  )\n}\n\nexport default ContactList\n\n\nContactList.prototype = {\n  contacts: PropTypes.object.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n}","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../Filter/Filter.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <label className={s.label}\n            htmlFor={shortid.generate()}>\n            Find contact by name\n            <input className={s.input}\n                name=\"filter\"\n                type='text'\n                value={value}\n                onChange={onChange}/>\n        </label>\n    )\n}\n\nFilter.prototype = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import React from 'react';\nimport s from '../ContactList/ContactsList.module.css'\nconst Contact = () => {\n    return (\n     <section>\n        <h2 className={s.title}>Contacts</h2>\n     </section>\n     )\n}\nexport default  Contact","//  eslint-disable react/jsx-no-duplicate-props\nimport shortid from 'shortid';\nimport React, { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport Contact from './components/ContactList/Contact.jsx';\nimport s from './App.module.css';\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const contactCheck = contacts.find(({ name }) => name === newContact.name);\n\n    if (contactCheck !== undefined) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n    setContacts(prevState => [...prevState, newContact]);\n  };\n  const onChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  const normalizeContacts = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeContacts),\n  );\n\n  return (\n    <>\n      <section className={s.section}>\n        <ContactForm addContact={addContact} />\n        <Contact />\n        <Filter value={filter} onChange={onChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={deleteContact}\n        />\n      </section>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__2Rff5\",\"item\":\"ContactsList_item__1xwZQ\",\"title\":\"ContactsList_title__2Mqin\"};"],"sourceRoot":""}